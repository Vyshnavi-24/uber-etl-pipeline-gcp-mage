version: 0.1.1
default:
  # Default profile created for data IO access.
  # Add your credentials for the source you use, and delete the rest.
  # AWS
  AWS_ACCESS_KEY_ID: "{{ env_var('AWS_ACCESS_KEY_ID') }}"
  AWS_SECRET_ACCESS_KEY: "{{ env_var('AWS_SECRET_ACCESS_KEY') }}"
  AWS_SESSION_TOKEN: session_token (Used to generate Redshift credentials)
  AWS_REGION: region
  # Azure
  AZURE_CLIENT_ID: "{{ env_var('AZURE_CLIENT_ID') }}"
  AZURE_CLIENT_SECRET: "{{ env_var('AZURE_CLIENT_SECRET') }}"
  AZURE_STORAGE_ACCOUNT_NAME: "{{ env_var('AZURE_STORAGE_ACCOUNT_NAME') }}"
  AZURE_TENANT_ID: "{{ env_var('AZURE_TENANT_ID') }}"
  # Clickhouse
  CLICKHOUSE_DATABASE: default
  CLICKHOUSE_HOST: host.docker.internal
  CLICKHOUSE_INTERFACE: http
  CLICKHOUSE_PASSWORD: null
  CLICKHOUSE_PORT: 8123
  CLICKHOUSE_USERNAME: null
  # Druid
  DRUID_HOST: hostname
  DRUID_PASSWORD: password
  DRUID_PATH: /druid/v2/sql/
  DRUID_PORT: 8082
  DRUID_SCHEME: http
  DRUID_USER: user
  # Google
  GOOGLE_SERVICE_ACC_KEY:
    "type": "service_account"
    "project_id": "ubertestproject-397515"
    "private_key_id": "01ac37bb97ab7147141761e1ada6ee4d17fe1880"
    "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDKLcbsV5KY8jNw\nl+Iui4XaULpDcI83w19VFZ1YCYeQdMkhEJ+2bGykFGT7D2qeuavnU2SSnE6IUNDs\nhyr/yPBkyRPaXpCa0Fw73TjZjiFFIvMVMYxMdUlXBlDAiLBWq4oTJI7TLCT7SEfb\neMVB+5vzekcr1LL4zjbKNG45ViN2sLI6hKD7E8uuHSzJJrfiYxCLHBh4jMVU5icx\nVq488e2NUxYNSRdJasiw95WwF5KZmQCs1VpIQwexOoazJQKpQhDygSM+26xOsObX\nprKtq5I8kYbR3mu8rM5U1pk5cyugOTQ5wtfVCeRAjbCypx4pxbS3YHkS23x2NZ7Q\n2hW9MpNvAgMBAAECggEABddG3ZZjhZ7xG6Vo0OokRZwD39x51ZwV/jMSKSIHD6rT\nf9pnT2Pzy0Mn2/nSHWA7+suICzm0qkHxvPS/l+m+kwv4ZMomdlX1ZVbIlr64FKEt\nNjebBa0HMeOBLU2loxyC3eTa18DUhYo61BQnfQkED+MJr8SN+2ThLaC+AHdXG6kF\nilCYV8MY8GBQwkU52QPo2XEOXD5h0TbRUCF+C91LaIGwjmd65kvhVcyGkNk0j7AE\nKGO8iPLSRum/xGnRbKqwnAoi6zTK+BnlVt8LRG98gbh6H/LHeWZIxXQ/qyjwBOLb\nzOS6xOHj4/z9YFuBV+9F8o0SB/5stV5KOnQpRIpCyQKBgQD52E27wc7Ub9/nDOdn\nPIe/XxP1FqW1k9/NZ17NOS3BOeQtdB6c79a8Pk4V31gh8sEb7lICFcranonl4sy7\nF0nAyWyOyYHVU1XzCR3PHF5qUtlFjuUQ2jhmn+hMMIWqodeEf0088Q3OfRz2Lh5D\n0JIudo3Gvfqb+OVnDO3jqqcMpwKBgQDPKNuMuCl4xI4SIbH3Z+pOFRGP4t6QZw23\nSxc7uJeLzRRjDncId1DIjGjM69SQczsohCfMbGM1GI7yPvkuezDmTIomd6ZdLplA\n3nxkbNGGNAxvIwAT4pMEQcIyRB2pnneJRApt8n0RJ13imVqBvvqd/KfaX7X4A9Zh\nhZO1qX4z+QKBgHrP983+g8PrRl2V+z3FBFluzCmiu0wZZ17ZnEE3BSXBZkdtmAq+\n3ohj/BBGXFU7te8b5BYATlnOqqxlIwwoc2mf2YwKw5ZwQ4SXC58eK88J8KF/j1wM\nWMMhgZfKFjp9GaqYxQfa2lWRLKZanyfoo6LRRfnWsxTucR2Jvno2Da1rAoGAcC99\nLiixdNBk69bJjOT+k0h/mT9QLj1QxTlqHJJrp27pIne76J7M5b58JrV0CMIOgHOJ\nJgBwfVmOWAvYX96g7ab3jbtwIbhRkDqsfKodkaLwNONscFhcK4r9AsG2mpvRuklZ\nqI8QQdDi3AsWY3ssN5CSygTZA7X4TBnNkyx1xukCgYBZoYZBiLQqzeRkQYMDNHn0\n0J1n/sf4xipLYs5B4IArm9R6D8swqvvogUecQWI6vl48ZsZ82g4+B+6KyDnyk+yz\n7Gs37Wny3eXbVR3mJ918FzLV9CjqrZ3ZfHVFXSZoXBhAvLfSqCHQbj59hTdaWQlK\nbAXwgh51LuCd26ufMJIYcA==\n-----END PRIVATE KEY-----\n"
    "client_email": "uber-service-account@ubertestproject-397515.iam.gserviceaccount.com"
    "client_id": "106027772690972890243"
    "auth_uri": "https://accounts.google.com/o/oauth2/auth"
    "token_uri": "https://oauth2.googleapis.com/token"
    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs"
    "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/uber-service-account%40ubertestproject-397515.iam.gserviceaccount.com"
  GOOGLE_SERVICE_ACC_KEY_FILEPATH: "/path/to/your/service/account/key.json"
  GOOGLE_LOCATION: US # Optional
  # MongoDB
  # Specify either the connection string or the (host, password, user, port) to connect to MongoDB.
  MONGODB_CONNECTION_STRING: "mongodb://{username}:{password}@{host}:{port}/"
  MONGODB_HOST: host
  MONGODB_PORT: 27017
  MONGODB_USER: user
  MONGODB_PASSWORD: password
  MONGODB_DATABASE: database
  MONGODB_COLLECTION: collection
  # MSSQL
  MSSQL_DATABASE: database
  MSSQL_SCHEMA: schema
  MSSQL_DRIVER: "ODBC Driver 18 for SQL Server"
  MSSQL_HOST: host
  MSSQL_PASSWORD: password
  MSSQL_PORT: 1433
  MSSQL_USER: SA
  # MySQL
  MYSQL_DATABASE: database
  MYSQL_HOST: host
  MYSQL_PASSWORD: password
  MYSQL_PORT: 3306
  MYSQL_USER: root
  # PostgresSQL
  POSTGRES_CONNECT_TIMEOUT: 10
  POSTGRES_DBNAME: postgres
  POSTGRES_SCHEMA: public # Optional
  POSTGRES_USER: username
  POSTGRES_PASSWORD: password
  POSTGRES_HOST: hostname
  POSTGRES_PORT: 5432
  # Redshift
  REDSHIFT_SCHEMA: public # Optional
  REDSHIFT_DBNAME: redshift_db_name
  REDSHIFT_HOST: redshift_cluster_id.identifier.region.redshift.amazonaws.com
  REDSHIFT_PORT: 5439
  REDSHIFT_TEMP_CRED_USER: temp_username
  REDSHIFT_TEMP_CRED_PASSWORD: temp_password
  REDSHIFT_DBUSER: redshift_db_user
  REDSHIFT_CLUSTER_ID: redshift_cluster_id
  REDSHIFT_IAM_PROFILE: default
  # Snowflake
  SNOWFLAKE_USER: username
  SNOWFLAKE_PASSWORD: password
  SNOWFLAKE_ACCOUNT: account_id.region
  SNOWFLAKE_DEFAULT_WH: null                  # Optional default warehouse
  SNOWFLAKE_DEFAULT_DB: null                  # Optional default database
  SNOWFLAKE_DEFAULT_SCHEMA: null              # Optional default schema
  SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: null      # Optional private key passphrase
  SNOWFLAKE_PRIVATE_KEY_PATH: null            # Optional private key path
  SNOWFLAKE_ROLE: null                        # Optional role name
  SNOWFLAKE_TIMEOUT: null                     # Optional timeout in seconds
  # Trino
  trino:
    catalog: postgresql                       # Change this to the catalog of your choice
    host: 127.0.0.1
    http_headers:
      X-Something: 'mage=power'
    http_scheme: http
    password: mage1337                        # Optional
    port: 8080
    schema: core_data
    session_properties:                       # Optional
      acc01.optimize_locality_enabled: false
      optimize_hash_generation: true
    source: trino-cli                         # Optional
    user: admin
    verify: /path/to/your/ca.crt              # Optional
